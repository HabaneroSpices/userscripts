// ==UserScript==
// @name         USSR | Un-original Simple Site Redirector
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Automatically redirect sites to better alternatives. DISCLAIMER: Parts of this content has been generated by an artificial intelligence language model.
// @author       Habanero
// @match        https://twitter.com/*
// @match        https://www.twitter.com/*
// @match        https://x.com/*
// @match        https://www.x.com/*
// @match        https://cortex.netcompany.com/*
// @match        https://nitter.net/*
// @match        https://claude.ai/*
// @grant        none
// @updateURL    https://github.com/habanerospices/userscripts/raw/main/USSR/ussr.user.js
// @downloadURL  https://github.com/habanerospices/userscripts/raw/main/USSR/ussr.user.js
// ==/UserScript==

(function() {
    'use strict';

    // Configuration object for redirects
    const redirectConfig = {
        'twitter.com': 'nitter.net',
        'www.twitter.com': 'nitter.net',
        'x.com': 'nitter.net',
        'www.x.com': 'nitter.net',
        'cortex.netcompany.com': 'claude.ai/new'
    };

    // Create and show notification
    function showNotification(message, type = 'success', duration = 3000) {
        // Remove any existing notifications
        const existing = document.getElementById('site-redirector-notification');
        if (existing) {
            existing.remove();
        }

        // Create notification element
        const notification = document.createElement('div');
        notification.id = 'site-redirector-notification';

        const bgColor = type === 'success' ? '#4CAF50' : '#2196F3';

        notification.innerHTML = `
            <div style="
                position: fixed;
                top: 20px;
                right: 20px;
                background: ${bgColor};
                color: white;
                padding: 15px 20px;
                border-radius: 8px;
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;
                font-size: 14px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.3);
                z-index: 999999;
                max-width: 350px;
                transform: translateX(100%);
                transition: transform 0.3s ease-out;
            ">
                ${message}
                <div style="
                    position: absolute;
                    top: 5px;
                    right: 8px;
                    cursor: pointer;
                    font-size: 18px;
                    line-height: 1;
                    opacity: 0.7;
                    width: 20px;
                    height: 20px;
                    text-align: center;
                " onclick="this.parentElement.parentElement.remove()">Ã—</div>
            </div>
        `;

        // Add notification to page
        document.body.appendChild(notification);

        // Trigger slide-in animation
        setTimeout(() => {
            const notificationDiv = notification.firstElementChild;
            notificationDiv.style.transform = 'translateX(0)';
        }, 10);

        // Auto-remove after specified duration
        if (duration > 0) {
            setTimeout(() => {
                if (notification.parentElement) {
                    const notificationDiv = notification.firstElementChild;
                    notificationDiv.style.transform = 'translateX(100%)';
                    setTimeout(() => {
                        if (notification.parentElement) {
                            notification.remove();
                        }
                    }, 300);
                }
            }, duration);
        }
    }

    // Get current hostname
    const currentHost = window.location.hostname;

    // Check if we arrived from a redirect (check URL parameters or referrer)
    function checkIfRedirected() {
        const urlParams = new URLSearchParams(window.location.search);
        const redirectedFrom = urlParams.get('redirected_from');

        if (redirectedFrom) {
            showNotification(`
                <div style="font-weight: bold; margin-bottom: 5px;">ðŸ”„ Redirected Successfully</div>
                <div style="font-size: 12px; opacity: 0.9;">
                    From: <strong>${redirectedFrom}</strong><br>
                    To: <strong>${currentHost}</strong>
                </div>
            `);

            // Clean up URL by removing the parameter
            const newUrl = new URL(window.location);
            newUrl.searchParams.delete('redirected_from');
            window.history.replaceState({}, document.title, newUrl.toString());
        }
    }

    // Check if current site should be redirected
    if (redirectConfig[currentHost]) {
        const targetHost = redirectConfig[currentHost];

        // Show notification before redirecting
        showNotification(`
            <div style="font-weight: bold; margin-bottom: 5px;">ðŸ”„ Redirecting...</div>
            <div style="font-size: 12px; opacity: 0.9;">
                From: <strong>${currentHost}</strong><br>
                To: <strong>${targetHost}</strong>
            </div>
        `, 'success', 0); // No auto-dismiss since we're redirecting

        // Add a small delay to show the notification, then redirect
        setTimeout(() => {
            let newUrl = window.location.href.replace(currentHost, targetHost);

            // Add redirect parameter to show notification on destination
            const separator = newUrl.includes('?') ? '&' : '?';
            newUrl += `${separator}redirected_from=${encodeURIComponent(currentHost)}`;

            window.location.replace(newUrl);
        }, 800);
    } else {
        // Check if we just arrived from a redirect
        setTimeout(checkIfRedirected, 100); // Small delay to ensure page is loaded
    }
})();
